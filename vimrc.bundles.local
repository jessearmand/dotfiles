" color schemes
Plug 'flazz/vim-colorschemes'

" complementary pairs of mappings.
Plug 'tpope/vim-unimpaired'

" autocomplete
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif
let g:deoplete#enable_at_startup = 1
let g:python_host_prog = "/usr/bin/python"
let g:python3_host_prog = "/usr/bin/python3"

Plug 'Shougo/neosnippet.vim'
Plug 'Shougo/neosnippet-snippets'
Plug 'ervandew/supertab'

" rust
Plug 'sebastianmarkow/deoplete-rust'

" swift
Plug 'kballard/vim-swift'
Plug 'mitsuse/autocomplete-swift'

" text objects
Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-indent'

" Indenting / aligment
Plug 'godlygeek/tabular'
Plug 'editorconfig/editorconfig-vim'

" tmux
Plug 'christoomey/vim-tmux-navigator'

" statusline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'edkolev/tmuxline.vim'

" json
Plug 'elzr/vim-json'

" For haskell development
Plug 'dag/vim2hs'
Plug 'eagletmt/neco-ghc'
Plug 'pbrisbin/vim-syntax-shakespeare'
Plug 'majutsushi/tagbar'
Plug 'jpalardy/vim-slime'

if has('nvim')
  Plug 'autozimu/LanguageClient-neovim', {
    \ 'branch': 'next',
    \ 'do': './install.sh'
    \ }
endif

" gister
Plug 'mattn/gist-vim'
Plug 'mattn/webapi-vim'

" cpp
Plug 'bfrg/vim-cpp-modern'
