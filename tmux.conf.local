# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

unbind-key -T edit-mode-vi Up ; bind-key -T edit-mode-vi Up send-keys -X history-up
unbind-key -T edit-mode-vi Down ; bind-key -T edit-mode-vi Down send-keys -X history-down

# Setup 'v' to begin selection as in Vim
unbind-key -T copy-mode-vi Space ; bind-key -T copy-mode-vi v send-keys -X begin-selection

unbind-key -T copy-mode-vi v

# Update default binding of `Enter` to also use copy-selection
unbind-key -T copy-mode-vi Enter ; bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v ; bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [ ; bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ] ; bind-key -T copy-mode-vi ] send-keys -X copy-selection

unbind-key -T prefix p
unbind-key -T copy-mode-vi p ; bind-key -T copy-mode-vi p send-keys -X paste-buffer

# Enable interaction between tmux shell and the OS (e.g. open)
set -g default-command "reattach-to-user-namespace -l /bin/bash"
set -g default-command "reattach-to-user-namespace -l /bin/zsh"
set -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"

set -g escape-time 10
