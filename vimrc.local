colorscheme darkspectrum
highlight NonText guibg=#060606
highlight Folded  guibg=#0A0A0A guifg=#9090D0

" Highlight current line
set cursorline
highlight CursorLine cterm=NONE

" Turn on relative line number
set relativenumber

" keyboard shortcuts
inoremap jj <ESC>

" highlight search
set hlsearch
nmap <Leader>hl :let @/ = ""<CR>

" Removes trailing spaces
function! TrimWhiteSpace()
    %s/\s\+$//e
endfunction

nnoremap <silent> <Leader>rts :call TrimWhiteSpace()<CR>

let g:SuperTabDefaultCompletionType = '<C-n>'

" For golang
au FileType go nmap <Leader>s <Plug>(go-implements)
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>gd <Plug>(go-doc)
au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
au FileType go nmap <Leader>gb <Plug>(go-doc-browser)
au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>dt <Plug>(go-def-tab)
au FileType go nmap <Leader>e <Plug>(go-rename)
let g:go_fmt_command = "goimports"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1

" From http://www.stephendiehl.com/posts/vim_haskell.html
" tagbar mappings
nmap <Leader>= :TagbarToggle<CR>
let g:tagbar_autofocus = 1

" one way communication between vim and tmux
let g:slime_target = "tmux"
let g:slime_paste_file = tempname()

" R programming
au FileType r setlocal tabstop=8 softtabstop=4 shiftwidth=4 expandtab

let g:gist_open_browser_after_post = 1
let g:gist_detect_filetype = 1
let g:gist_clip_command = 'pbcopy'

let g:airline_powerline_fonts = 1

" cpp
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_class_decl_highlight = 1

" netrw
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25
